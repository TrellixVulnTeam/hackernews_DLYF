{"ast":null,"code":"import axios from 'axios';\nconst BASE_API_URL = 'https://hacker-news.firebaseio.com/v0';\n\nconst getStory = async id => {\n  try {\n    const story = await axios.get(`${BASE_API_URL}/item/${id}.json`);\n    return story;\n  } catch (error) {\n    console.log('Error while getting a story.');\n  }\n};\n\nexport const getStories = async type => {\n  try {\n    const {\n      data: storyIds\n    } = await axios.get(`${BASE_API_URL}/topstories.json`);\n    const stories = await Promise.all(storyIds.slice(0, 1).map(getStory));\n    return console.log('stories', stories);\n  } catch (error) {\n    console.log('Error while getting list of stories.');\n  }\n};","map":{"version":3,"sources":["C:/E/Coding/React/hackernews/src/components/apis.js"],"names":["axios","BASE_API_URL","getStory","id","story","get","error","console","log","getStories","type","data","storyIds","stories","Promise","all","slice","map"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG,uCAArB;;AAGA,MAAMC,QAAQ,GAAG,MAAOC,EAAP,IAAc;AAC7B,MAAI;AACF,UAAMC,KAAK,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,GAAEJ,YAAa,SAAQE,EAAG,OAArC,CAApB;AACA,WAAOC,KAAP;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD;AACF,CAPD;;AASA,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACxC,MAAI;AACF,UAAM;AAAEC,MAAAA,IAAI,EAAEC;AAAR,QAAqB,MAAMZ,KAAK,CAACK,GAAN,CAC9B,GAAEJ,YAAa,kBADe,CAAjC;AAGA,UAAMY,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,KAAT,CAAe,CAAf,EAAkB,CAAlB,EAAqBC,GAArB,CAAyBf,QAAzB,CAAZ,CAAtB;AACA,WAAOK,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBK,OAAvB,CAAP;AACD,GAND,CAME,OAAOP,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACD;AACF,CAVM","sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_API_URL = 'https://hacker-news.firebaseio.com/v0';\r\n\r\n\r\nconst getStory = async (id) => {\r\n  try {\r\n    const story = await axios.get(`${BASE_API_URL}/item/${id}.json`);\r\n    return story;\r\n  } catch (error) {\r\n    console.log('Error while getting a story.');\r\n  }\r\n};\r\n\r\nexport const getStories = async (type) => {\r\n  try {\r\n    const { data: storyIds } = await axios.get(\r\n      `${BASE_API_URL}/topstories.json`\r\n    );\r\n    const stories = await Promise.all(storyIds.slice(0, 1).map(getStory));\r\n    return console.log('stories', stories);\r\n  } catch (error) {\r\n    console.log('Error while getting list of stories.');\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}