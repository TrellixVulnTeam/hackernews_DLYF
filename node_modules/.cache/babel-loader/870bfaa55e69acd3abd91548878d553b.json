{"ast":null,"code":"var _jsxFileName = \"C:\\\\E\\\\Coding\\\\React\\\\hackernews\\\\src\\\\router\\\\AppRouter.js\";\nimport React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport ShowStories from '../components/ShowStories';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hacker News Stories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 41\n          }, this),\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/:type\",\n          render: ({\n            match\n          }) => {\n            const {\n              type\n            } = match.params;\n\n            if (!['top', 'new', 'best'].includes(type)) {\n              return /*#__PURE__*/_jsxDEV(Redirect, {\n                to: \"/\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 24\n              }, this);\n            }\n\n            return /*#__PURE__*/_jsxDEV(ShowStories, {\n              type: type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 22\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["C:/E/Coding/React/hackernews/src/router/AppRouter.js"],"names":["React","BrowserRouter","Route","Switch","Redirect","ShowStories","AppRouter","match","type","params","includes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAuD,kBAAvD;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,sBACE,QAAC,aAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,MAAM,EAAE,mBAAM,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAA9B;AAAsD,UAAA,KAAK,EAAE;AAA7D;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,MAAM,EAAE,CAAC;AAAEC,YAAAA;AAAF,WAAD,KAAe;AACrB,kBAAM;AAAEC,cAAAA;AAAF,gBAAWD,KAAK,CAACE,MAAvB;;AACA,gBAAI,CAAC,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuBC,QAAvB,CAAgCF,IAAhC,CAAL,EAA4C;AAC1C,kCAAO,QAAC,QAAD;AAAU,gBAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AACD,gCAAO,QAAC,WAAD;AAAa,cAAA,IAAI,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;AARH;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CArBD;;KAAMF,S;AAuBN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport ShowStories from '../components/ShowStories';\n\nconst AppRouter = () => {\n  return (\n    <BrowserRouter>\n      <div className=\"container\">\n      <h1>Hacker News Stories</h1>\n      <Switch>\n          <Route path=\"/\" render={() => <Redirect to=\"/top\" />} exact={true} />\n          <Route\n            path=\"/:type\"\n            render={({ match }) => {\n              const { type } = match.params;\n              if (!['top', 'new', 'best'].includes(type)) {\n                return <Redirect to=\"/\" />;\n              }\n              return <ShowStories type={type} />;\n            }}\n          />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default AppRouter;\n"]},"metadata":{},"sourceType":"module"}